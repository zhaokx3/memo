<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="easybuy.server" />
	
	<!-- 配置hibernate与datasource,datasource使用apache dbcp管理 -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close"><!-- 设置为close使Spring容器关闭同时数据源能够正常关闭，以免造成连接泄露 --> 
        <beans:property name="driverClassName" value="${jdbc.driver}" />
        <beans:property name="url" value="${jdbc.url}" />
        <beans:property name="username" value="${jdbc.username}" />
        <beans:property name="password" value="${jdbc.password}" />
        <beans:property name="defaultReadOnly" value="false" /><!-- 设置为只读状态，配置读写分离时，读库可以设置为true
        在连接池创建后，会初始化并维护一定数量的数据库安连接，当请求过多时，数据库会动态增加连接数，
        当请求过少时，连接池会减少连接数至一个最小空闲值 -->
        <beans:property name="initialSize" value="0" /><!-- 在启动连接池初始创建的数据库连接，默认为0 -->
		<beans:property name="maxActive" value="20" /><!-- 设置数据库同一时间的最大活跃连接默认为8，负数表示不闲置 -->
        <beans:property name="maxIdle" value="15"/><!-- 在连接池空闲时的最大连接数，超过的会被释放，默认为8，负数表示不闲置 -->
        <beans:property name="minIdle" value="0" /><!-- 空闲时的最小连接数，低于这个数量会创建新连接，默认为0 -->
    	<beans:property name="maxWait" value="20000" /><!--连接被用完时等待归还的最大等待时间，单位毫秒，超出时间抛异常，默认为无限等待 -->
    </beans:bean>
	
	<!-- 配置我们的会话工厂-->
    <beans:bean id="sessionFactory"
        class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <beans:property name="dataSource">
            <beans:ref bean="dataSource" />
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <!-- MySQL的方言 -->
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</beans:prop>
                <beans:prop key="javax.persistence.validation.mode">none</beans:prop>
                <!-- 必要时在数据库新建所有表格 -->
                <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                <!-- 配置current session的上下文环境，方便我们调用sessionFactory获取当前线程统一个session对象 -->
                <beans:prop key="current_session_context_class">thread</beans:prop>
                <!-- 用更漂亮的格式显示sql语句-->
                <!-- <prop key="hibernate.format_sql">true</prop> -->
            </beans:props>
        </beans:property>
        <beans:property name="mappingLocations">  
            <beans:list>  
            	<beans:value>classpath:/easybuy/server/modelmap/*.hbm.xml</beans:value>
            </beans:list>  
        </beans:property>
    </beans:bean>	
    
    <!-- db connection -->
    <beans:bean id="DBconfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:value>classpath:dbconn.properties</beans:value>
		</beans:property>
	</beans:bean>
</beans:beans>
